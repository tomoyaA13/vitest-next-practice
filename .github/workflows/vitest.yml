name: Vitest Tests

# トリガー条件
on:
  # 全てのブランチへのpushで実行
  push:
    branches:
      - '**'
  # mainとmasterブランチへのプルリクエストで実行
  pull_request:
    branches: [ main, master ]

# ジョブの定義
jobs:
  test:
    name: Run Vitest Tests
    runs-on: ubuntu-latest
    
    steps:
      # リポジトリのチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4

      # Node.jsのセットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      # pnpmのインストール
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      # pnpmストアパスの取得（キャッシュ用）
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      # 依存関係のキャッシュ
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # 依存関係のインストール
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 型チェック
      - name: Type check
        run: pnpm tsc --noEmit

      # リンターの実行
      - name: Run ESLint
        run: pnpm lint

      # テストの実行（カバレッジ付き）
      - name: Run Vitest tests
        run: pnpm test:coverage

      # Storybook向けのVitestテスト
      - name: Install Playwright for Storybook tests
        run: pnpm exec playwright install --with-deps chromium

      # カバレッジレポートのアップロード
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      # PRにカバレッジコメントを追加（オプション）
      - name: Coverage Report
        uses: davelosert/vitest-coverage-report-action@v2
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vite-config-path: ./vitest.config.mts

  # ビルドのテスト（別ジョブ）
  build:
    name: Build Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Next.jsビルドのテスト
      - name: Build Next.js application
        run: pnpm build

      # ビルド成果物のアップロード（オプション）
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: github.event_name == 'push'
        with:
          name: nextjs-build
          path: .next/
          retention-days: 7